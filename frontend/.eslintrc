{
    "root": true, // limit eslint to this project only
    "parser": "@typescript-eslint/parser", //parser config reference:  https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/parser/README.md
    "parserOptions": {
        "sourceType": "module",
        "project": "tsconfig.json",
        "ecmaFeatures": {
            "jsx": true
        }
    },
    "env": {
        "browser": true,
        "es6": true,
        "node": true
    },
    "plugins": [
        "@typescript-eslint" // reference: https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/eslint-plugin
    ],
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended", // turns off some from eslint:recommended
        "plugin:@typescript-eslint/recommended", // Uses the recommended rules from the @typescript-eslint/eslint-plugin
        "prettier",
        "prettier/@typescript-eslint"
    ],
    "rules": {
        "semi": "error",
        "no-console": "error",
        "eqeqeq": "warn",
        "no-prototype-builtins": "warn",
        "prefer-spread": "warn",
        "prefer-const": "warn",
        "no-unused-expressions": "off",
        "@typescript-eslint/no-var-requires": "warn",
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/no-empty-interface": "warn",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/camelcase": "off", // off in favour of naming-convention
        "@typescript-eslint/naming-convention": [
            "warn", // warn if not in compliance with below
            {
                "selector": "variable",
                "format": [
                    "camelCase",
                    "PascalCase", // needed for GQL query variable names
                    "UPPER_CASE" // constants
                ]
            },
            {
                "selector": "property",
                "leadingUnderscore": "allow",
                "format": ["camelCase", "snake_case"]
            }
        ]
    }
}
